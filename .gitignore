# Rust build artifacts
/target/
**/target/
Cargo.lock
**/*.rs.bk
*.pdb

# Binary outputs
/binaries/
*.exe
*.dll
*.so
*.dylib
simple_tcs_sync

# Python artifacts
__pycache__/
*.py[cod]
*$py.class
*.egg-info/
.Python
venv/
env/
*.pyc

# IDE and editor files
.vscode/
.idea/
.grok/
*.swp
*.swo
*~
.DS_Store

# Build directories
/build/
/dist/
/out/

# Temporary files
*.tmp
*.temp
*.log
*.bak
*.orig
Cargo.toml.backup
*.backup

# CUDA/GPU artifacts
*.ptx
*.cubin

# Documentation build
/docs/_build/
/docs/site/

# Test artifacts
/test-results/
/coverage/
*.gcda
*.gcno

# Environment files (may contain secrets)
.env
.env.local

# Large model files
*.onnx
*.pt
*.pth
*.safetensors
*.gguf
*.ggml
models/

# Old backups and quarantine
BULLSHIT_QUARANTINE/
*-backup/
*-old/

# System files
Thumbs.db
.directory
.claude/

# Local working directories
vendor/
constants_core/
niodoo-core/

# Python virtual environments
venv/
.venv/

# Local cargo config
.cargo/

# Runtime data
data/

# Working/scratch files
*.rs.working
mock_*.rs

# Local working docs and scripts (not for repo)
/scripts/
/docs/working/
/docs/archive/

# Claude-generated test garbage
test_*
simple_*
standalone_*
*_test
*_demo
quick_test*
minimal_*
debug_*

# Learning curve CSVs
learning_curve_*.csv
learning_events.json
learning_events.csv

# Sync folders
.stfolder/
.stversions/

# VS Code remote
.vscode-server/

# Generated consolidated Rust markdown files
niodoo_complete_rust.md
niodoo_real_integrated_rust.md
all_rust.md
all_custom_rust.md

# Generation scripts (can be kept if useful)
generate_rust_md.sh
generate_md.sh


# Logs and metrics
logs/
*.prom
*.out
continual_logs/

# Build errors
build_errors.txt

# Production config (may contain secrets)
env.production
.env.production

# Python virtual environments (vLLM, etc)
vllm-env/

# Database/vector storage
storage/
qdrant_storage/
qdrant_config/
snapshots/

# Monitoring
grafana-provisioning/
prometheus.yml
docker-compose.monitoring.yml

# Backups
backups/

# Phase logs
phase*.txt
*_log.txt

# Monitoring dashboards (generated)
grafana-dashboard-*.json

# Temporary instruction/test files
COMMANDS_FOR_YOU.txt
DO_THIS_NOW.sh
*_NOW.sh
*_NOW.txt
TEST_NOW.txt
FIX_*.sh
FIX_*.txt
START_*.sh
START_*.txt
RUN_*.sh
check_all_services.sh
start_all_services.sh

# Benchmark results and plots
emotion_bench_metrics.csv
emotion_bench_results.json
entropy_over_cycles.png
rouge_vs_baseline.png

# Temporary documentation
EMOTION_BENCH_SUMMARY.md
QUICK_START_INSTRUCTIONS.md
QUICK_STATUS.md
READY_FOR_CODEX.md
REALITY_CHECK.md
README_BENCHMARK.md
VLLM_BIG_MODEL*.md
SERVICE_TEST_COMMANDS.md

# Python virtual environments
venv_new/
venv/

# Benchmark binaries
**/bin/emotion_bench.rs
