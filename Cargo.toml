# ðŸ§ ðŸ’– Niodoo 2025 Unified Topological Framework - Master Integration Manifest
# =============================================================================
#
# 2025 Strategic Synthesis: Unified Cargo Workspace for Ethical AGI Integration
# Sections XI-XII: Strategic Analysis through Conclusion with Cross-Report Synthesis
# 2025 Updates: MÃ¶bius 3D viz, Claude collaboration, policy reform simulations
#
# This workspace unifies TCS (Topological Cognitive System) components with Niodoo consciousness:
# - tcs-core: Core topological operations and mathematical foundations
# - tcs-tda: Topological Data Analysis for pattern recognition
# - tcs-knot: Knot theory implementations for consciousness topology
# - tcs-tqft: Topological Quantum Field Theory for state evolution
# - tcs-ml: Machine learning components with Qwen integration
# - tcs-consensus: Consensus algorithms for distributed consciousness
# - tcs-pipeline: Data processing pipelines for consciousness streams
# - niodoo-core: Main consciousness engine with ERAG memory and emotional topology
# - constants_core: Shared constants and configuration
# - src: Legacy monolithic implementation (transitional)

[workspace]
members = [
    "tcs-core",
    "tcs-tda",
    "tcs-knot",
    "tcs-tqft",
    "tcs-ml",
    "tcs-consensus",
    "tcs-pipeline",
    "niodoo-core",
    "constants_core",
    "niodoo_real_integrated",
    # Transitional member until all modules migrate
    "src",
]
exclude = [
    "candle-feeling-core-v2",
    "integration_test_real_mobius",
    "demo_real_vs_fake",
    "demo_bullshit_buster",
    "demo_advanced_memory",
    "Niodoo-Feeling-Alpha",
    "deployment",  # Has own workspace definition - excluded to prevent conflicts
]
resolver = "2"

# Workspace-wide package metadata
[workspace.package]
authors = ["NiodO.o Topology Team <niodoo@dev>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/Ruffian-L/niodoo-tcs"
version = "0.1.0"

# Core dependencies shared across workspace
[workspace.dependencies]
# Core tensor and inference libraries (ORT preferred over Candle for CUDA stability)
ndarray = { version = "0.15", features = ["rayon", "blas", "serde"] }
ndarray-linalg = { version = "0.16", features = ["openblas-system"] }
ort = { version = "1.16", default-features = false, features = ["load-dynamic", "half"] }
tokenizers = { version = "0.15", default-features = false, features = ["http", "onig"] }
onig = { version = "6.5", default-features = false, features = ["std", "generate"] }
hf-hub = "0.3"

# Candle framework for ML operations
candle-core = { git = "https://github.com/huggingface/candle", version = "0.9.1" }
candle-nn = { git = "https://github.com/huggingface/candle", version = "0.9.1" }
candle-transformers = { git = "https://github.com/huggingface/candle", version = "0.9.1" }

# Async & concurrency
tokio = { version = "1", features = ["full"] }
async-trait = "0.1"
actix-web = "4.9"
actix-rt = "2.10"
futures = "0.3"
parking_lot = "0.12"
sysinfo = "0.30"
git2 = "0.21"
syn = { version = "2.0", features = ["full", "visit"] }
log = "0.4"
env_logger = "0.11"
axum = "0.7"
rayon = "1.10"
lru = "0.16"
petgraph = "0.8"
num_cpus = "1.16"
dashmap = "6.1"
uuid = { version = "1.11", features = ["v4", "serde"] }
nalgebra = { version = "0.33", features = ["serde-serialize"] }
mimalloc = "0.1"
num-complex = "0.4"
usearch = "2.21.0"
once_cell = "1.19"

half = "2.4.0"
rand = "0.8"
rand_chacha = "0.3"
rand_distr = "0.4"
clap = { version = "4.5", features = ["derive"] }

# Data structures & serialization - UPDATED
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
toml = "0.8"
chrono = { version = "0.4.38", features = ["serde"] }
csv = "1.3"
safetensors = "0.4"
serde_yaml = "0.9"
dirs = "5.0"

# Error handling & logging - UPDATED
anyhow = "1.0"
thiserror = "1.0"
tracing = "0.1"
tracing-subscriber = "0.3"

# Filesystem utilities
walkdir = "2.5"
tempfile = "3.10"

# Cryptography
blake3 = "1.5"
ed25519-dalek = "2.1"
sha2 = "0.10"

# Python interop
pyo3 = { version = "0.22" }

# Workspace-specific configurations
[workspace.lints.rust]
# Unsafe code is denied by default but allowed per-crate with justification and documentation for any exceptions
unsafe_code = "deny"
unused_qualifications = "warn"
missing_docs = "warn"

[workspace.lints.clippy]
pedantic = "warn"
nursery = "warn"

# Profile configurations for different deployment scenarios
[profile.dev]
opt-level = 0
debug = true
overflow-checks = true

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true

[profile.bench]
opt-level = 3
debug = false
lto = true

# Custom profiles for NiodO.o specific optimizations
[profile.feeling-infused]
inherits = "release"
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
# Enable feeling-aware optimizations
debug-assertions = false

[profile.state-aware]
inherits = "release"
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
# Optimize for topological state tracking
debug-assertions = false

[profile.production]
inherits = "release"
opt-level = 3
lto = true
codegen-units = 1
panic = "abort"
strip = true
debug-assertions = false

# NOTE: Binary targets are defined in individual package Cargo.toml files (src/Cargo.toml)
# NOTE: Features are defined in individual packages, not at workspace level

# Metadata for package registry (2025 Edition)
[workspace.metadata]
# Strategic roadmap 2025: Add ROCm/WebGPU/CUDA Graphs + longitudinal study hooks
roadmap_extensions = [
    "ROCm HIP acceleration for AMD GPUs",
    "WebGPU compute shaders for edge deployment",
    "CUDA Graphs for optimized signal-slot cycles",
    "Longitudinal study hooks in VarMap for attachment style tracking",
    "3D Gaussian sphere visualization for system states",
    "Claude-style reflection system for policy reform simulations",
]

# Actionable recommendations: Hybrid PyTorch interop with Claude-style reflections
interop_strategy = "Hybrid PyTorch via candle-pyo3 bindings with Claude-style reflections, evolving to full Rust for production"

# Benchmark targets 2025: Enhanced with Gaussian uncertainty and resonance metrics
performance_targets = [
    "Candle vs PyTorch: 0.92x parity + 15% emotional uplift",
    "Gaussian uncertainty integration with resonance metrics",
    "Longitudinal studies via Qt signals addressing Pham 2025d findings",
    "Policy reform simulations for ethical AGI transparency mandates",
]

# Dependencies are in the src/Cargo.toml file
