version: '3.8'

services:
  mcp-app:
    build: .
    runtime: nvidia
    ports:
      - "3030:3030"
      - "9095:9095"
    volumes:
      - ./models:/app/models
      - ./output:/app/output
      - ./data:/app/data
      - ./logs:/app/logs
    environment:
      - CUDA_LAUNCH_BLOCKING=1  # Debug mode; remove for production
      - NVIDIA_VISIBLE_DEVICES=all
    cap_add:
      - SYS_PTRACE  # For debugging if needed
    networks:
      - mcp-network

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - mcp-network

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - mcp-network

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro
      - ./monitoring/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    networks:
      - mcp-network

networks:
  mcp-network:

volumes:
  qdrant_data:
  grafana_data: