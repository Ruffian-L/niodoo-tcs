[package]
name = "niodoo_real_integrated"
version = "0.1.0"
edition = "2021"
authors = ["Niodoo Torque Team <torque@niodoo.ai>"]
description = "Full NIODOO pipeline integration with real Qwen embeddings, ERAG memory, tokenizer promotion, vLLM hybrid generation, and learning loop."
license = "MIT"

[lib]
path = "src/lib.rs"

[features]
default = ["beelink"]
beelink = []
5080-q = []
gauntlet = []
examples = []
qdrant = []

[dependencies]
# Existing deps from workspace
ndarray = { workspace = true }
nalgebra = { workspace = true }
candle-core = { workspace = true }
candle-nn = { workspace = true }
candle-transformers = { workspace = true }
tokio = { workspace = true }
anyhow = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
tracing = { workspace = true }
qdrant-client = "1.7"
reqwest = { version = "0.11", features = ["json"] }
uuid = { workspace = true }
chrono = { workspace = true }
thiserror = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
clap = { workspace = true }
env_logger = { workspace = true }
log = { workspace = true }
rand = { workspace = true }
blake3 = { workspace = true }
once_cell = { workspace = true }
parking_lot = { workspace = true }
rayon = { workspace = true }
rand_distr = { workspace = true }
lru = { workspace = true }
axum = { workspace = true }
prometheus = { workspace = true }
lazy_static = { workspace = true }
regex = { workspace = true }
serde_yaml = { workspace = true }
safetensors = { workspace = true }
num-complex = { workspace = true }
csv = { workspace = true }
plotters = { workspace = true }
tonic = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] }
bincode = { workspace = true }
base64 = { workspace = true }
niodoo-core = { path = "../niodoo-core" }
tcs-core = { path = "../tcs-core" }
tcs-ml = { path = "../tcs-ml" }
tcs-knot = { path = "../tcs-knot" }
tcs-tqft = { path = "../tcs-tqft" }
tokio-stream = { workspace = true }

# Protobuf additions
prost = { workspace = true, features = ["derive"] }

[build-dependencies]
prost-build = "0.13"
tonic-build = "0.12"
protoc-bin-vendored = "3"

[[bench]]
name = "niodoo_real_bench"
harness = false

# Legacy integration tests removed in 2025-10 cleanup

[[test]]
name = "integration"
path = "tests/integration.rs"

[[bin]]
name = "niodoo_real_integrated"
path = "src/main.rs"

[[bin]]
name = "rut_gauntlet"
path = "src/bin/rut_gauntlet.rs"
required-features = ["gauntlet"]

[[bin]]
name = "topology_spider"
path = "src/bin/topology_spider.rs"

[[bin]]
name = "test_healing_integration"
path = "src/bin/test_healing_integration.rs"

[[bin]]
name = "million_cycle_test"
path = "src/bin/million_cycle_test.rs"

[[bin]]
name = "metrics_server"
path = "src/bin/metrics_server.rs"

[[bin]]
name = "proto_test"
path = "src/bin/proto_test.rs"
required-features = ["qdrant"]

[[bin]]
name = "shard_telemetry_server"
path = "src/bin/shard_telemetry_server.rs"

[[bin]]
name = "federated_runtime"
path = "src/bin/federated_runtime.rs"

[[bin]]
name = "topology_bench"
path = "src/bin/topology_bench.rs"

[[example]]
name = "topology_baseline"
path = "examples/topology_baseline.rs"
required-features = ["examples"]

[[example]]
name = "topology_eval"
path = "examples/topology_eval.rs"
required-features = ["examples"]

[[example]]
name = "resilience"
path = "examples/resilience.rs"
required-features = ["examples"]

[[example]]
name = "argo_istio_blueprint"
path = "examples/argo_istio_blueprint.rs"
required-features = ["examples"]

[dev-dependencies]
criterion = "0.5"
mockall = "0.13"
